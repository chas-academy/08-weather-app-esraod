{"ast":null,"code":"import _regeneratorRuntime from \"/Users/EODMacbook/EsChas/08-weather-app-esraod/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/EODMacbook/EsChas/08-weather-app-esraod/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/EODMacbook/EsChas/08-weather-app-esraod/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/EODMacbook/EsChas/08-weather-app-esraod/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/EODMacbook/EsChas/08-weather-app-esraod/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/EODMacbook/EsChas/08-weather-app-esraod/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/EODMacbook/EsChas/08-weather-app-esraod/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/EODMacbook/EsChas/08-weather-app-esraod/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { API_KEY } from './api/Key';\nimport Search from './components/nav/Search';\nimport Today from './components/weather-card/Today';\nimport Week from './components/weather-card/Week';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faSearch, faFrown, faTint, faWind, faLocationArrow, faSun, faCircle } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faSearch, faFrown, faTint, faWind, faLocationArrow, faSun, faCircle);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      city: undefined,\n      country: undefined,\n      temperature: undefined,\n      icon: undefined,\n      description: undefined,\n      humidity: undefined,\n      wind: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: \"\",\n      time: undefined\n    };\n\n    _this.getLocation =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.watchId = navigator.geolocation.getCurrentPosition(function (position) {\n                  _this.setState({\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude,\n                    error: null\n                  }, function () {\n                    var lat = \"\".concat(_this.state.latitude);\n                    var lon = \"\".concat(_this.state.longitude);\n                    var API_WEATHER = \"http://api.openweathermap.org/data/2.5/forecast?lat=\".concat(lat, \"&lon=\").concat(lon, \"&units=metric&appid=\").concat(API_KEY);\n                    fetch(API_WEATHER).then(function (response) {\n                      return response.json();\n                    }).then(function (responseJson) {\n                      console.log(responseJson);\n                      console.log(responseJson.forecast);\n\n                      _this.setState({\n                        city: responseJson.city.name,\n                        country: responseJson.city.country,\n                        temperature: Math.floor(responseJson.list[\"0\"].main.temp).toFixed(0),\n                        time: responseJson.list[\"0\"].dt,\n                        icon: responseJson.list[\"0\"].weather[\"0\"].id,\n                        description: responseJson.list[3].weather.description,\n                        humidity: responseJson.list[0].main.humidity,\n                        wind: responseJson.list[0].wind.speed,\n                        error: \"\"\n                      });\n                    }).catch(function (error) {\n                      console.log(error);\n                    });\n                  });\n                }, function (error) {\n                  return _this.setState({\n                    error: error.message\n                  });\n                }, {\n                  enableHighAccuracy: true,\n                  timeout: 20000,\n                  maximumAge: 1000,\n                  distanceFilter: 5\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Search, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Today, {\n        city: this.state.city,\n        country: this.state.country,\n        temperature: this.state.temperature,\n        icon: this.state.icon,\n        description: this.state.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Week, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/EODMacbook/EsChas/08-weather-app-esraod/src/App.js"],"names":["React","Component","API_KEY","Search","Today","Week","library","faSearch","faFrown","faTint","faWind","faLocationArrow","faSun","faCircle","add","App","state","city","undefined","country","temperature","icon","description","humidity","wind","sunrise","sunset","error","time","getLocation","e","watchId","navigator","geolocation","getCurrentPosition","position","setState","latitude","coords","longitude","lat","lon","API_WEATHER","fetch","then","response","json","responseJson","console","log","forecast","name","Math","floor","list","main","temp","toFixed","dt","weather","id","speed","catch","message","enableHighAccuracy","timeout","maximumAge","distanceFilter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { API_KEY } from './api/Key'\n\nimport Search from './components/nav/Search'\nimport Today from './components/weather-card/Today'\nimport Week from './components/weather-card/Week'\n\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSearch, faFrown,faTint,faWind, faLocationArrow, faSun,faCircle} from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faSearch,faFrown,faTint,faWind, faLocationArrow, faSun,faCircle)\n\n\nclass App extends Component {\n\n\n  state = {\n    city: undefined,\n    country: undefined,\n    temperature: undefined,\n    icon: undefined,\n    description: undefined,\n    humidity: undefined,\n    wind: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    error: \"\",\n    time: undefined\n  }\n\n\n  componentDidMount() {  \n    this.getLocation(); \n  }\n\n\n  getLocation = async (e) =>{\n    this.watchId = navigator.geolocation.getCurrentPosition(\n      position => {\n        this.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          error: null\n        },\n        ()=>{\n          var lat = `${this.state.latitude}`;\n          var lon = `${this.state.longitude}`;\n          let API_WEATHER = `http://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`;\n          fetch(API_WEATHER)\n            .then(response => response.json())\n            .then(responseJson => {\n                  console.log(responseJson);\n                  console.log(responseJson.forecast);\n                  this.setState({\n                    city: responseJson.city.name,\n                    country: responseJson.city.country,\n                    temperature: Math.floor(responseJson.list[\"0\"].main.temp).toFixed(0),\n                    time: responseJson.list[\"0\"].dt,\n                    icon: responseJson.list[\"0\"].weather[\"0\"].id,\n                    description: responseJson.list[3].weather.description,\n                    humidity: responseJson.list[0].main.humidity,\n                    wind: responseJson.list[0].wind.speed,\n                    error: \"\"\n                  });\n                })\n                \n\n                .catch(error => {\n                  console.log(error);\n                });\n              \n              });\n              },\n\n              \n                error => this.setState({ error: error.message }),\n                {\n                  enableHighAccuracy: true,\n                  timeout: 20000,\n                  maximumAge: 1000,\n                  distanceFilter: 5\n                }\n              );\n            } \n\n  render() {\n    return (\n      <div>\n        <Search />\n        <Today \n          city={this.state.city}\n          country={this.state.country}\n          temperature={this.state.temperature} \n          icon={this.state.icon}\n          description={this.state.description}\n        />\n        <Week />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}